version: "3.9"

services:
  db:
    image: postgres:17-alpine3.22
    container_name: db
    environment:
      POSTGRES_USER: noteapp
      POSTGRES_PASSWORD: note123
      POSTGRES_DB: asjnoteapp
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U noteapp -d asjnoteapp" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthcheck/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./backend/.env
    volumes:
      - static_volume:/app/staticfiles
    links:
      - db
    ports:
      - "8000:8000"
    networks:
      - app-network

  frontend-nginx:
    build: ./frontend
    container_name: frontend
    depends_on:
      backend:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./frontend/nginx/default.conf:/etc/conf.d/default.conf
      - static_volume:/app/staticfiles
    ports:
      - "80:80"
    networks:
      - app-network


volumes:
  postgres_data:
  static_volume:

networks:
  app-network:
